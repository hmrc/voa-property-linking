# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = voa-property-linking

application.logger.name=${appName}

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.voapropertylinking.config.GuiceModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.voapropertylinking.errorhandler.CustomHttpErrorHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# uk.gov.hmrc.voapropertylinking.auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 50

  controllers.PropertyRepresentationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.PropertyLinkingController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.IndividualAccountController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.GroupAccountController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.PropertyDetailsController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.SubmissionIdController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.AddressLookup = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.DVRCaseManagement = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.MessagesController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.AgentController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.CheckCaseController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.ChallengeController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.TestController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}

dvr.collection.name = "dvrRecords"
dvr.record.ttl.duration = 14 days

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = false
}

# Microservice specific uk.gov.hmrc.voapropertylinking.config
auditing {
  enabled = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/property-linking"
}

# BST
bst {
  resources {
    externalPropertyLink {
      myOrganisationsPropertyLink.path = "/external-property-link-management-api/my-organisation/property-links/{propertyLinkId}"
      myOrganisationsPropertyLinks.path = "/external-property-link-management-api/my-organisation/property-links"
      myAgentPropertyLinks.path = "/external-property-link-management-api/my-organisation/agents/{agentCode}/property-links"
      myAgentAvailablePropertyLinks.path = "/external-property-link-management-api/my-organisation/agents/{agentCode}/available-property-links"
      myClientsPropertyLink.path = "/external-property-link-management-api/my-organisation/clients/all/property-links/{propertyLinkId}"
      myClientsPropertyLinks.path = "/external-property-link-management-api/my-organisation/clients/all/property-links"
      myClientPropertyLinks.path = "/external-property-link-management-api/my-organisation/clients/{clientId}/property-links"
      myClients.path = "/external-property-link-management-api/my-organisation/clients"
      createPropertyLink.path = "/external-property-link-management-api/my-organisation/property-links"
      createPropertyLinkOnClientBehalf.path = "/external-property-link-management-api/my-organisation/clients/{clientId}/property-links"
      myOrganisationsAgents.path = "/external-property-link-management-api/my-organisation/agents"
      revokeMyClientsPropertyLink.path = "/external-property-link-management-api/my-organisation/clients/all/property-links/{submissionId}/appointment"
    }


    externalValuationManagement {
      valuationHistory.path = "/external-valuation-management-api/properties/{uarn}/valuations"
      detailedValuation.path = "/external-valuation-management-api/properties/{uarn}/valuations/{valuationId}"
      valuationLookupUrl.path = "/external-valuation-management-api/valuationLookups/{lookupType}"
    }
    organisationManagementApi {
      agentAppointmentChanges.path    = "/external-organisation-management-api/my-organisation/agentAppointmentChanges"
      myAgentDetails.path            = "/external-organisation-management-api/agents/{representativeCode}"
    }
  }
}
# VOA Modernised
voa {
  resources {
    externalPropertyLink {
      myOrganisationsPropertyLink.path = "/external-property-link-management-api/my-organisation/property-links/{propertyLinkId}"
      myOrganisationsPropertyLinks.path = "/external-property-link-management-api/my-organisation/property-links"
      myAgentPropertyLinks.path = "/external-property-link-management-api/my-organisation/agents/{agentCode}/property-links"
      myAgentAvailablePropertyLinks.path = "/external-property-link-management-api/my-organisation/agents/{agentCode}/available-property-links"
      myClientsPropertyLink.path = "/external-property-link-management-api/my-organisation/clients/all/property-links/{propertyLinkId}"
      myClientsPropertyLinks.path = "/external-property-link-management-api/my-organisation/clients/all/property-links"
      myClientPropertyLinks.path = "/external-property-link-management-api/my-organisation/clients/{clientId}/property-links"
      myClients.path = "/external-property-link-management-api/my-organisation/clients"
      createPropertyLink.path = "/external-property-link-management-api/my-organisation/property-links"
      createPropertyLinkOnClientBehalf.path = "/external-property-link-management-api/my-organisation/clients/{clientId}/property-links"
      myOrganisationsAgents.path = "/external-property-link-management-api/my-organisation/agents"
      revokeMyClientsPropertyLink.path = "/external-property-link-management-api/my-organisation/clients/all/property-links/{submissionId}/appointment"
    }


    externalValuationManagement {
      valuationHistory.path = "/external-valuation-management-api/properties/{uarn}/valuations"
      detailedValuation.path = "/external-valuation-management-api/properties/{uarn}/valuations/{valuationId}"
      valuationLookupUrl.path = "/external-valuation-management-api/valuationLookups/{lookupType}"
    }
    organisationManagementApi {
      agentAppointmentChanges.path    = "/external-organisation-management-api/my-organisation/agentAppointmentChanges"
      myAgentDetails.path            = "/external-organisation-management-api/agents/{representativeCode}"
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    business-rates-auth {
      host = localhost
      port = 9525
    }

    voa-modernised-api {
      host = localhost
      port = 9540
    }

    voa-bst {
      host = localhost
      port = 9545
    }
  }
}

feature-switch {
  bstDownstream {
    enabled = false
  }
}
