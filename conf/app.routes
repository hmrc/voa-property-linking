# microservice specific routes

GET          /property-representations/validate-agent-code/:agentCode/:authorisationId        @controllers.PropertyRepresentationController.validateAgentCode(agentCode:Long, authorisationId: Long)
GET          /property-representations/agent/:status/:organisationId                          @controllers.PropertyRepresentationController.forAgent(status: String, organisationId: Long, pagination: models.PaginationParams ?= models.DefaultPaginationParams)

POST         /property-representations/create                                                 @controllers.PropertyRepresentationController.create()

PATCH        /property-representations/revoke/:authorisedPartyId                              @controllers.PropertyRepresentationController.revoke(authorisedPartyId: Long)
PUT          /property-representations/response                                               @controllers.PropertyRepresentationController.response()

POST         /property-links                                                                  @controllers.PropertyLinkingController.create()
GET          /property-links                                                                  @controllers.PropertyLinkingController.find(organisationId: Long, params: models.PaginationParams)
GET          /property-links/client-property/:authorisationId                                 @controllers.PropertyLinkingController.clientProperty(authorisationId: Long, clientOrganisationId: Long, agentOrganisationId: Long)
GET          /property-links/:linkId                                                          @controllers.PropertyLinkingController.get(linkId: Long)
GET          /dashboard/assessments/:authorisationId                                          @controllers.PropertyLinkingController.assessments(authorisationId: Long)

GET          /individuals/:personId                                                           @controllers.IndividualAccountController.get(personId: Int)
GET          /individuals                                                                     @controllers.IndividualAccountController.withExternalId(externalId)
POST         /individuals                                                                     @controllers.IndividualAccountController.create()
PUT          /individuals/:personId                                                           @controllers.IndividualAccountController.update(personId: Int)

GET          /groups/:organisationId                                                          @controllers.GroupAccountController.get(organisationId: Int)
GET          /groups                                                                          @controllers.GroupAccountController.withGroupId(groupId)
GET          /groups/agentCode/:agentCode                                                     @controllers.GroupAccountController.withAgentCode(agentCode)
POST         /groups                                                                          @controllers.GroupAccountController.create()
PUT          /groups/:orgId                                                                   @controllers.GroupAccountController.update(orgId: Long)

POST         /envelopes/:envId                                                                @controllers.EnvelopeController.create(envId: String)
PUT          /envelopes/:envId                                                                @controllers.EnvelopeController.close(envId: String)
GET          /envelopes                                                                       @controllers.EnvelopeController.get()
GET          /transfer                                                                        @controllers.FileTransferController.run()

GET          /address                                                                         @controllers.AddressLookup.find(postcode)
GET          /address/:id                                                                     @controllers.AddressLookup.get(id: Int)
POST         /address                                                                         @controllers.AddressLookup.create

GET          /submissionId/:prefix                                                            @controllers.SubmissionIdController.get(prefix: String)

POST         /request-detailed-valuation                                                      @controllers.DVRCaseManagement.requestDetailedValuation
